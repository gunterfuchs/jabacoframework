<?xml version="1.0" encoding="ISO-8859-1"?>
<SourceFile><Source><![CDATA[Option Explicit
'Implements TableModelListener

Dim myMatrix As New #HashMap 
Dim myMaxRow As Integer 
Dim myMaxCol As Integer 
Dim myTmpIndex As New #Point(0, 0)
Dim myColumnAlign() As #fmTextAlign
Dim myColumnIcon() As #IResource
Dim myColumnName() As String
'Dim myWatcher As #TableModelListener
Dim myGrid As JBGrid

Dim myStopEdit As Boolean 
Dim insideCellEditable As Boolean 

Public Sub JBGridModel(refGrid As JBGrid)
   myGrid = refGrid
   'Call Parent.addTableModelListener(Me)
End Sub

Public Property Get Parent() As #AbstractTableModel
   Parent = Base
End Property

Private Function max(v1 As Long, v2 As Long) As Long
   If v1 > v2 Then max = v1 Else max = v2
End Function

Public Sub fireTableCellUpdated(row As Integer, col As Integer)
   If myGrid.isEditing(row, col) Then 
      myGrid.CellEditor.Value = getValueAt(row, col)
   End If
   Call Base.fireTableCellUpdated(row, col)
End Sub

Public Function getColumnCount() As Integer
   getColumnCount = myMaxCol
End Function

Public Function setColumnCount(v As Integer)
   On Error Resume Next
   myMaxCol = v
   Parent.fireTableStructureChanged() 
End Function

Public Function getRowCount() As Integer 
   getRowCount = myMaxRow
End Function

Public Function setRowCount(v As Integer)
   On Error Resume Next
   myMaxRow = v
   Parent.fireTableStructureChanged() 
End Function

Private Sub refreshRowColCount(row As Integer, col As Integer)
   myMaxRow = max(row, myMaxRow)
   myMaxCol = max(col, myMaxCol)
   If Ubound(myColumnAlign()) = myMaxCol Then Exit Sub
   Redim Preserve myColumnAlign(myMaxCol)
   Redim Preserve myColumnName(myMaxCol)
   Redim Preserve myColumnIcon(myMaxCol)
End Sub

Public Sub setColumnAlign(col As Integer, val As #fmTextAlign)
   On Error Resume Next
   Call refreshRowColCount(myMaxRow, col)
   myColumnAlign(col) = val
   Parent.fireTableStructureChanged() 
End Sub

Public Function getColumnAlign(col As Integer) As #fmTextAlign
   On Error Resume Next
   'default initial value of array is 0 -> CenterAlign in HeaderRenderer
   'we reallocate values here to get a default LeftAlign versa Let HeaderAlign() in JBGrid.jsrc
   Select Case myColumnAlign(col)
      Case 0, 1
         getColumnAlign = 10
      Case 2
         getColumnAlign = 0
      Case 3
         getColumnAlign = 11
   End Select
End Function

Public Sub setColumnIcon(col As Integer, val As #IResource)
   On Error Resume Next
   Call refreshRowColCount(myMaxRow, col)
   myColumnIcon(col) = val
   Parent.fireTableStructureChanged() 
End Sub

Public Function getColumnIcon(col As Integer) As #IResource
   On Error Resume Next
   getColumnIcon = myColumnIcon(col)
End Function

Public Sub setColumnName(col As Integer, val As String)
   On Error Resume Next
   Call refreshRowColCount(myMaxRow, col)
   myColumnName(col) = val
   Parent.fireTableStructureChanged()
End Sub

Public Function getColumnName(col As Integer) As String
   On Error Resume Next
   getColumnName = myColumnName(col)
End Function

Public Function registerStopEditEvent() As Boolean
   myStopEdit = True
   registerStopEditEvent = insideCellEditable
End Function

Public Function isCellEditable(row As Integer, col As Integer) As Boolean
   If myGrid.Editable = jbNotEditable Then Exit Function
   insideCellEditable = True
   If myGrid = Nothing Then 
      isCellEditable = Base.isCellEditable(row, col)
   Else
      myStopEdit = False
      Call myGrid.fireBeforeEdit(row, col)
      If myStopEdit Then 
         isCellEditable = False
      Else
         isCellEditable = (myGrid.Editable <> jbNotEditable)
      End If
   End If
   insideCellEditable = False
End Function

Public Sub setValueAt(val As Object, row As Integer, col As Integer)
   If (val = Nothing) Then
      myMatrix.remove New point(col, row)
      Exit Sub
   End If
   If IsClass(val, #JBCellData) Then
      Dim myData As JBCellData = Cast(val, #JBCellData)
      myData.Text = myData.Text
      Call myData.setOwner(myGrid, row, col)
   End If
   Call refreshRowColCount(row, col)
   'Base.setValueAt(val, row, col)   
   Call myMatrix.put(New point(row, col), val)
   Call Parent.fireTableCellUpdated(row, col)
End Sub

Public Function getValueAt(row As Integer, col As Integer) As #Object
   Dim tmpRet As Object 
   myTmpIndex.x = row
   myTmpIndex.y = col
   tmpRet = myMatrix.get(myTmpIndex)
   'tmpRet = Base.getValueAt(row, col)
   If tmpRet = Nothing Then
      getValueAt = ""
   Else
      getValueAt = tmpRet
   End If
End Function 
 
Public Sub clear()
'   Call myMatrix.clear()
   myMatrix = New #HashMap
   myMaxCol = 0
   myMaxRow = 0
   Call Parent.fireTableDataChanged()
   Redim myColumnAlign(-1)
   Redim myColumnName(-1)
   Redim myColumnIcon(-1)
   Call Base.fireTableStructureChanged()
End Sub

'Public Sub tableChanged(e As TableModelEvent)
'End Sub

]]></Source><Param Name="(Name)" Value="JBGridModel"/><Param Name="(SuperClass)" Value="javax/swing/table/AbstractTableModel"/><Param Name="(Type)" Value="Class"/><Param Name="(Access)" Value="Public"/><Param Name="(NameSpace)" Value="VB"/></SourceFile>
